# -*- coding: utf-8 -*-
"""Webscraping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14e6Cs4BdTCdaCtHa3iuyGtXvOk0NCW5W
"""

print("codegnan Assingment K.Eshwar")

"""#Web scrapping """

!pip install requests

!pip install bs4

#import packages
import requests
from bs4 import BeautifulSoup

url = 'https://webscraper.io/test-sites/e-commerce/allinone'
response = requests.get(url)
soup = BeautifulSoup(response.content,"html")
print(soup.prettify())

soup.find('h4',attrs={'class' : 'pull-right price'}).text

a = soup.find_all('h4',attrs={'class' : 'pull-right price'})
for i in a:
  print(i.text)

"""## Makaan.com Webscraping"""

#import the packages
import requests
from bs4 import BeautifulSoup

url = 'https://www.makaan.com/hyderabad-residential-property/buy-property-in-hyderabad-city'
response = requests.get(url)
response

soup = BeautifulSoup(response.text,"html")
print(soup.prettify())

soup.find('span',attrs={'class' : 'seller-type'}).text

soup.find('a',attrs={'class' : 'typelink'}).span.text

soup.find('span',attrs={'itemprop' : 'addressLocality'}).text

soup.find('div',attrs={'data-type' : 'price-link'}).text

soup.find('td',attrs={'class': 'size'}).text

soup.find('td',attrs={'class': 'val'}).text

own = soup.find_all('span',attrs={'class' : 'seller-type'})

owner = []
for o in own:
  owner.append(o.text)

owner

bh = soup.find_all('a',attrs={'class' : 'typelink'})

no_bhk = []
for b in bh:
  no_bhk.append(b.span.text)

no_bhk

loc = soup.find_all('span',attrs={'itemprop' : 'addressLocality'})

locality = []

for l in loc:
  locality.append(l.text)

locality

prc = soup.find_all('div',attrs={'data-type' : 'price-link'})

price = []

for p in prc:
  price.append(p.text)

price

ar = soup.find_all('td',attrs={'class': 'size'})

area_sqft = []

for a in ar:
  area_sqft.append(a.text)

area_sqft

stat = soup.find_all('td',attrs={'class': 'val'})

con_status = []

for s in stat:
  con_status.append(s.text)

con_status

import pandas as pd
data = pd.DataFrame({'Owner' : owner,
                     'No_Bhk' : no_bhk,
                     'Loaclity' : locality,
                     'Price' : price,
                     'Area' : area_sqft,
                     'Con_status' : con_status})
data

base_url = 'https://www.makaan.com/hyderabad-residential-property/buy-property-in-hyderabad-city?page='
for i in range(1,11):
  print(base_url+str(i))

import time
from IPython.display import clear_output

base_url = 'https://www.makaan.com/hyderabad-residential-property/buy-property-in-hyderabad-city?page='

owner = []
no_bhk = []
locality = []
price = []
area_sqft = []
con_status = []

for i in range(1,11):
  url = base_url+str(i)

  print(f'Scraping info from page {i} ')
  clear_output(wait=True)

  #we are pausing for 3 sec
  # time.sleep(3)
  response = requests.get(url)
  soup = BeautifulSoup(response.text,'html')

  #owner info
  own = soup.find_all('span',attrs={'class' : 'seller-type'})
  for o in own:
    owner.append(o.text)

  #number of bhk
  bh = soup.find_all('a',attrs={'class' : 'typelink'})
  for b in bh:
    no_bhk.append(b.span.text)
  
  #locality
  loc = soup.find_all('span',attrs={'itemprop' : 'addressLocality'})
  for l in loc:
    locality.append(l.text)

  #price
  prc = soup.find_all('div',attrs={'data-type' : 'price-link'})
  for p in prc:
    price.append(p.text)

  #area
  ar = soup.find_all('td',attrs={'class': 'size'})
  for a in ar:
    area_sqft.append(a.text)


  #construction status
  stat = soup.find_all('td',attrs={'class': 'val'})
  for s in stat:
    con_status.append(s.text)

# print(area_sqft)
data = pd.DataFrame({'Owner' : owner,
                     'No_Bhk' : no_bhk,
                     'Loaclity' : locality,
                     'Price' : price,
                     'Area' : area_sqft,
                     'Con_status' : con_status})
data

print(len(owner))

locality

import pandas as pd
data = pd.DataFrame({
                     'No_Bhk' : no_bhk,
                     'Loaclity' : locality,
                     'Price' : price,
                     'Area' : area_sqft,
                     'Con_status' : con_status})
data

data.to_csv('real-estate.csv')











